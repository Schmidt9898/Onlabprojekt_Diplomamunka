#!/usr/bin/bash

add_this=""

filename="stripeddownmaintile.c"

runname="runtile"

optional=""

mode="icc"

Compile_tile()
{

	runname="runtile"
	if test -f $runname;then
    rm $runname
	fi

echo "---Tile-------" 
if [[ $mode == "icc" ]]; then
echo "intel api"
icc -I ../../../Smart_Stopper $filename  -o $runname -Wall $optional -O3 -std=c11 -qopenmp -xHOST $add_this
else
echo "clang"
clang -I ../../../Smart_Stopper $filename  -o $runname -Wall -fopenmp=libomp -Ofast -gline-tables-only  -fopenmp-version=51 -Rpass-analysis=loop-vectorize -Rpass=loop-vectorize -Rpass-missed=loop-vectorize -march=native $optional $add_this

fi
echo "---end compiling----"
}


echo "Build_tile script"



if (($#==0)) ;then
echo "No input argument."
#exit 1
#else
#optional="-D $1"
#echo $optional
fi
IFS=' ' read -r -a tomb <<< $@

for ((i=0;i<$#;i++));do
case ${tomb[$i]} in 
		icc)
			mode="icc"
			;;
		clang)
		mode="clang"
		;;
		tile)
		optional="-D TILE"
		;;
		-p)
			add_this="-D blocksize_x=${tomb[$i+1]} -D blocksize_y=${tomb[$i+2]} -D blocksize_z=${tomb[$i+3]}"
			i+=3
			echo $add_this
			;;

esac
done


Compile_tile


#echo "compile for any? gpu..." 
#clang -I ../../Smart_Stopper mainbase.c  -o run -Wall -fopenmp=libomp -fopenmp-targets=nvptx64-nvidia-cuda -Ofast -gline-tables-only -lm -D LOMP

#clang -I ../../Smart_Stopper mainbase.c  -o run_v100 -Wall -fopenmp=libomp -fopenmp-targets=nvptx64-nvidia-cuda -Ofast -gline-tables-only -lm -Xopenmp-target -march=sm_70 -D LOMP

#pgcc -acc -Minfo=accel -ta=tesla -Wall -I ../../Smart_Stopper -c99 mainbase.c -o runacc -D LACC
