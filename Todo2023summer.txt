
Create example for the openmp tile on intel devcloud doesnt work. - dont need

Repeate all measurements with greater parameter space. 							done

Create and run performance counters on the best examples. legjobb 10 

AMD profiler raw data analisys - tar file Reguly

Find why the mainso8 works better than the composed main.c - this is a bug or something


Szisztematikus ábrák gyártása  barchart,mindenből a legjobb

Legjobb block méret konzisztencia

kombinált eset legjobb 10 mindenből kombináljuk  -not good done

Nézz utánna hogyan kell cikket írni



IntelGPU - soon





0713 ***************************************************************

Todo add more case for blocked 			-done
add gpu temperature for measure.py		--skip
add 21 for loop and start from 11 mainso8   --done



nvprof mérés a result 0718- tól, feltételes indítás a 11. ciklustól --done
nv-nsight-cu-cli --profile-from-start off	--done
validáció a kimenő adatra mainso8 --done

cuda mérés újból - almost done


summary sorok összerendezése --done

L2 bw - l2 cache bandwith? --idk

nvhpc openmp offload -- tried




try this
nv-nsight-cu-cli -k op_cuda_compute_flux_edge_kernel -c 10 -f -o prof_flux_atomics --section ComputeWorkloadAnalysis --section InstructionStats --section LaunchStats --section MemoryWorkloadAnalysis --section MemoryWorkloadAnalysis_Chart --section MemoryWorkloadAnalysis_Deprecated --section MemoryWorkloadAnalysis_Tables --section Occupancy --section SchedulerStats --section SourceCounters --section SpeedOfLight --section SpeedOfLight_HierarchicalDoubleRooflineChart --section SpeedOfLight_RooflineChart --section WarpStateStats  ../MG-CFD-app-OP2/bin/mgcfd_cuda_atomics_soa -i input-mgcfd.dat OP_BLOCK_SIZE=256 OP_PART_SIZE=256
nv-nsight-cu-cli -k op_cuda_compute_flux_edge_kernel -c 10 -f -o prof_flux_atomics --section ComputeWorkloadAnalysis --section InstructionStats --section LaunchStats --section MemoryWorkloadAnalysis --section MemoryWorkloadAnalysis_Chart --section MemoryWorkloadAnalysis_Deprecated --section MemoryWorkloadAnalysis_Tables --section Occupancy --section SchedulerStats --section SourceCounters --section SpeedOfLight --section SpeedOfLight_HierarchicalDoubleRooflineChart --section SpeedOfLight_RooflineChart --section WarpStateStats  ../run 

nv-nsight-cu-cli --launch-skip 11 --launch-count 10 --replay-mode kernel --csv --section ComputeWorkloadAnalysis --section InstructionStats --section LaunchStats --section MemoryWorkloadAnalysis --section MemoryWorkloadAnalysis_Chart --section MemoryWorkloadAnalysis_Deprecated --section MemoryWorkloadAnalysis_Tables --section Occupancy --section SchedulerStats --section SourceCounters --section SpeedOfLight --section SpeedOfLight_HierarchicalDoubleRooflineChart --section SpeedOfLight_RooflineChart --section WarpStateStats
done

Szisztematikus ábrák gyártása  barchart,mindenből a legjobb

több mérés átlaga done

AMD profiler || omniperf analyze -p paper_so16_naiv_aomp/mi200/ --gui


pár lépéses elrontás- mainso8 elrontani dinamic type al

R javaslat:
	nvidia cluster collum barchart
	15.3 ,17, cray, 
	cuda, naiv, 



ncu --metrics smsp__sass_thread_inst_executed_op_dadd_pred_on.sum,smsp__sass_thread_inst_executed_op_dmul_pred_on.sum,smsp__sass_thread_inst_executed_op_dfma_pred_on.sum,smsp__sass_thread_inst_executed_ops_dadd_dmul_dfma_pred_on.sum,smsp__sass_thread_inst_executed_op_fp64_pred_on.sum,smsp__sass_thread_inst_executed_op_fp32_pred_on.sum,smsp__sass_thread_inst_executed_op_integer_pred_on.sum


smsp__sass_thread_inst_executed_op_ffma_pred_on.sum

flop_count_hp_mul 	smsp__sass_thread_inst_executed_op_hmul_pred_on.sum


flop_count_sp 	smsp__sass_thread_inst_executed_op_fadd_pred_on.sum + smsp__sass_thread_inst_executed_op_fmul_pred_on.sum + smsp__sass_thread_inst_executed_op_ffma_pred_on.sum * 2
flop_count_sp_add 	smsp__sass_thread_inst_executed_op_fadd_pred_on.sum
flop_count_sp_fma 	smsp__sass_thread_inst_executed_op_ffma_pred_on.sum
flop_count_sp_mul 	smsp__sass_thread_inst_executed_op_fmul_pred_on.sum

smsp__sass_thread_inst_executed_op_fadd_pred_on.sum,smsp__sass_thread_inst_executed_op_ffma_pred_on.sum,smsp__sass_thread_inst_executed_op_fmul_pred_on.sum

flop_count_sp 	Number of single-precision floating-point operations executed by non-predicated threads (add, multiply, and multiply-accumulate). Each multiply-accumulate operation contributes 2 to the count. The count does not include special operations. 	Multi-context

flop_count_sp_add 	Number of single-precision floating-point add operations executed by non-predicated threads. 	Multi-context

flop_count_sp_fma 	Number of single-precision floating-point multiply-accumulate operations executed by non-predicated threads. Each multiply-accumulate operation contributes 1 to the count. 	Multi-context

flop_count_sp_mul 	Number of single-precision floating-point multiply operations executed by non-predicated threads. 	Multi-context

flop_count_sp_special 	Number of single-precision floating-point special operations executed by non-predicated threads.




PTX,PTX,PTX,PTX,PTX,PTX,PTX,PTX,PTX,PTX,PTX,PTX,PTX,PTX,PTX,PTX,PTX,PTX,
PTX,PTX,PTX,PTX,PTX,PTX,PTX,PTX,PTX,PTX,PTX,PTX,PTX,PTX,PTX,PTX,PTX,PTX,
PTX,PTX,PTX,PTX,PTX,PTX,PTX,PTX,PTX,PTX,PTX,PTX,PTX,PTX,PTX,PTX,PTX,PTX,
PTX,PTX,PTX,PTX,PTX,PTX,PTX,PTX,PTX,PTX,PTX,PTX,PTX,PTX,PTX,PTX,PTX,PTX,

nvcc -ptx -o kernel.ptx kernel.cu

clang++ -S -mllvm --x86-asm-syntax=intel test.cpp -> 

clang -S -Xclang -emit-llvm -Xclang -O3 -o output.ll input.c
llc -march=nvptx -mcpu=sm_XX -o output.ptx output.ll



clang -S -Xclang -emit-llvm -Xclang -Ofast -ffast-math -fopenmp -fopenmp-targets=nvptx64-nvidia-cuda -lomptarget -Xopenmp-target -march=sm_70 -fopenmp-version=51 -lomptarget -lm -L /home/shared/software/clang/15.3-centos8/lib ./mainso8.c -DEXPORTDATA -DFORNAIV -DF800_2 -DTHREADLIMIT=128 -o output.ll

clang -S -Xclang -emit-llvm -Xclang -Ofast -ffast-math -fopenmp -fopenmp-targets=nvptx64-nvidia-cuda -lomptarget -Xopenmp-target -march=sm_70 -fopenmp-version=51  ./mainso8.c -DEXPORTDATA -DFORNAIV -DF800_2 -DTHREADLIMIT=128 -o output.ll


nvcc -ptx -o mainso.cu.ptx mainso.cu -DF800_2 -DTHREADLIMIT=512 -Dblocksize_x=4 -Dblocksize_y=2 -Dblocksize_z=64

clang -S -Xclang -emit-llvm -Xclang -O3 -o output.ll mainso8.c -DEXPORTDATA -DFORNAIV -DF800_2 -DTHREADLIMIT=128 
llc -march=nvptx -mcpu=sm_70 -o output.ptx output.ll